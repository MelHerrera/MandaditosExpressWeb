@using MandaditosExpress.Models.Enum
@model IEnumerable<MandaditosExpress.Models.ViewModels.IndexEnvioViewModel>

@{
    ViewBag.Title = "Envios";
    var refrescar = ViewBag.Refrescar!=null ? ViewBag.Refrescar.ToString().ToLower() : false.ToString().ToLower();
}

@section Styles{
    <link href="~/Content/plugins/checkbox/magic-input.min.css" rel="stylesheet" />
}

<div class="row m-2">
    <div class="col-auto">
        <a class="btn btn-success float-left" href="@Url.Action("Create","Envios")"><i class="fa fa-plus"></i> Solicitar Envío</a>
    </div>
    <div class="col-sm-5">
        <div class="input-group">
            <input type="text" placeholder="Búsqueda por Código" class="input form-control" data-bind="textInput:$root.TextInputBusqueda">
            <span class="input-group-btn">
                <button type="button" class="btn btn btn-success" data-bind="click:$root.LimpiarFiltro">
                    <i class="fa fa-trash"></i> Limpiar
                </button>
            </span>
        </div>
    </div>
</div>

<!--ko with:TablePagination-->
<!--ko if: ItemsInPage().length > 0-->
<div class="align-items-center pb-lg-5">
    <div class="row">
        <div class="col-md-12">
            <div class="row justify-content-center" data-bind="foreach:ItemsInPage">

                <div class="card w-25 my-2 mx-2 p-0" data-bind="style: { 'border-color': EstaRetrasado() ? 'red' : 'rgba(0, 0, 0, 0.125)', color:(EstaRetrasado() ? '#ed5565' : 'inherit') }">
                    <div class="card-body">
                        <div class="ibox m-0">
                            <!--row monto total y logo-->
                            <div class="row">
                                <div class="col-md-6 pb-0">
                                    <label class="font-weight-bold form-label">Monto Total</label>
                                    <div class="form-group">
                                        <small class="h4"><i class="fa fa-money"></i> <span data-bind="text:MontoTotalDelEnvio"></span> </small>
                                    </div>
                                </div>
                                <div class="col-md-5 float-right text-center m-0">
                                    <img src="~/Images/Logo.png" style="width:70%" />
                                </div>
                            </div>
                            <!--row codigo del envio-->
                            <div class="row">
                                <div class="col-md-12">
                                    <small class="font-weight-bold">Código:</small>
                                    <small class="font-weight-bold" data-bind="text:CodigoDeEnvio">-</small>
                                </div>
                            </div>
                            <hr class="m-0" />

                            <div class="row">
                                <div class="col-md-2 mt-2 ml-2 text-center align-self-center">
                                    <i class="fa fa-dot-circle-o fa-2x"></i>
                                </div>
                                <div class="col-md-9 mt-1 px-0 text-center align-middle">
                                    <small data-bind="text:LugarOrigen.Direccion"></small>
                                </div>

                            </div>
                            <div class="row mt-3">
                                <div class="col-md-2 mt-2 ml-2 text-center align-self-center">
                                    <i class="fa fa-map-marker fa-2x"></i>
                                </div>
                                <div class="col-md-9 mt-1 px-0 text-center align-middle">
                                    <small data-bind="text:LugarDestino.Direccion"></small>
                                </div>

                            </div>

                            <hr class="m-1" />

                            <div class="row mb-2">
                                <div class="col-md-8">
                                    <label class="font-weight-bold form-label m-0">Cliente</label>
                                    <div class="form-group m-0">
                                        <small data-bind="text:Cliente"></small>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <span data-bind="text:EstadoDelEnvioText, attr:{ class:EstadoDelEnvioClass }"></span>
                                </div>
                            </div>

                            <div class="row p-0">
                                @if (User.IsInRole("Admin"))
                                {
                                    <div class="col-auto align-self-center">
                                        <div class="form-group align-self-center">
                                            <label for="check_finalizar" class="font-weight-bold">Finalizar</label>
                                            <input type="checkbox" class="mgc-switch mgc-sm align-middle chk" id="check_finalizar" data-bind="checked:Finalizado, disable:Finalizado, click:$root.Finalizar" />
                                        </div>
                                    </div>
                                }

                                <div class="col">
                                    <div class=" btn-group float-right">
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <!--ko if:( !Rechazado() )-->
                                            <a class="btn btn-danger" href="#" data-bind="click:$root.Rechazar"><i class="fa fa-times-circle" title="Rechazar Envío"></i></a>
                                            <!--/ko-->
                                            <a class="btn btn-primary" data-bind="attr: { href: '@Url.Action("Asignacion")/' + Id() }"><i class="fa fa-link" title="Asignar Motorizado"></i></a>
                                        }
                                        <a class="btn btn-warning" data-bind="attr: { href: '@Url.Action("Details")/' + Id() }"><i class="fa fa-info-circle" title="Detalles"></i></a>
                                    </div>
                                </div>
                            </div>
                            <!--ko if:Rechazado()-->
                            <div class="row">
                                <div class="col-sm-12">
                                    <span class="fa fa-info-circle">
                                        <small class="font-weight-bold">Rechazado por: </small>
                                        <small data-bind="text:MotivoDeRechazo"></small>
                                    </span>

                                </div>
                            </div>
                            <!--/ko-->
                            <!--ko if:EstaRetrasado()-->
                            <div class="row float-right">
                                <div class="col-sm-12">
                                    <small>Retrasado </small>
                                    <small class="font-weight-bold" data-bind="text:TiempoRetraso"></small>
                                    <small> Min</small>
                                </div>
                            </div>
                            <!--/ko-->
                        </div>
                    </div>
                </div>
            </div>
            <!--ko with:Pagination-->
            <nav aria-label="Páginas">
                <ul class="pagination text-success justify-content-center" data-bind="visible: NeedPaging">

                    <li class="page-item" data-bind="css: { disabled: !FirstPageActive() }">
                        <a class="page-link" data-bind="click: GoToFirst">Primera</a>
                    </li>

                    <li class="page-item" data-bind="css: { disabled: !PreviousPageActive() }">
                        <a class="page-link" data-bind="click: GoToPrevious">Anterior</a>
                    </li>

                    <!-- ko foreach: GetPages() -->
                    <li class="page-item" data-bind="css: { active: ko.unwrap($parent.CurrentPage()) === ko.unwrap($data) }">
                        <a class="page-link" data-bind="click: $parent.GoToPage, text: $data">1</a>
                    </li>
                    <!-- /ko -->

                    <li class="page-item" data-bind="css: { disabled: !NextPageActive() }">
                        <a class="page-link" data-bind="click: GoToNext">Siguiente</a>
                    </li>

                    <li class="page-item" data-bind="css: { disabled: !LastPageActive() }">
                        <a class="page-link" data-bind="click: GoToLast">última</a>
                    </li>
                </ul>
            </nav>
            <!--/ko-->
        </div>
    </div>
</div>
<!--/ko-->
<!--ko ifnot: ItemsInPage().length > 0-->
<div class="justify-content-center" style="text-align:center;">
    <img src="~/Images/5.png" />
    <div class="alert alert-warning alert-Empty mt-3 mx-5" role="alert">
        Se encontraron 0 Envios <a href="@Url.Action("Create")" class="alert-link">Click aqui</a>. Para solicitar uno.
    </div>
</div>
<!--/ko-->
<!--/ko-->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/knockout")
    <script src="~/Scripts/knockout/knockout.mapping.js"></script>
    @Scripts.Render("~/plugins/sweetalert")
    @Scripts.Render("~/plugins/notify")
    <script src="~/Scripts/knockout/ViewModel/Shared/PaginacionViewModel.js"></script>
    <script src="~/Scripts/knockout/ViewModel/Shared/TablePagination.js"></script>

    <script>
        function IndexEnvio(envios) {
            const self = this;
            envios = envios || {};

            self.Envios = ko.observable(envios ? ko.utils.arrayMap(envios, function (it) { return ko.mapping.fromJS(it) }) : {});
            self.EnviosFiltered = ko.observableArray(self.Envios());
            self.TablePagination = ko.observable(new TablePagintationViewModel({
                PaginationSize: 9,
                Items: self.EnviosFiltered,//pasar todo el observable para que la paginacion reaccione a cualquier accion aplicada a este arreglo
                maxPageCount: 7
            }));
            self.EnvioSelected = ko.observable({});
            self.Finalizar = function (data, event) {
                self.EnvioSelected(data);//guardarlo temporalmente para aplicar sobre el operaciones despues de que regresa del server

                Swal.fire({
                    title: '¿Esta seguro(a) que desea finalizarlo?',
                    text: "!Esta acción no es reversible!!!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, Finalizarlo!',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {

                    if (result.isConfirmed) {
                        FinalizarEnvio(data.Id());
                    }
                    if (result.isDenied || result.isDismissed)
                        self.EnvioSelected().Finalizado(!self.EnvioSelected().Finalizado());
                })

                return true;
            }
            self.Rechazar = function (data, event) {

                Swal.fire({
                    title: 'Esta seguro(a) que desea rechazarlo?',
                    icon: 'warning',
                    input: 'textarea',
                    inputLabel: 'Motivo de rechazo:',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, Rechazarlo!',
                    cancelButtonText: 'Cancelar',
                    inputValidator: (value) => {
                        if (!value) {
                            return 'El Campo motivo es obligaorio!'
                        }
                    },
                    inputAttributes: {
                        maxlength: 150
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        if (result.value) {
                            RechazarEnvio(data.Id(), result.value);
                        }
                    }
                })
            }
            self.TextInputBusqueda = ko.observable();
            self.LimpiarFiltro = function () {
                self.TextInputBusqueda('');
            }

            //subscripciones
            self.TextInputBusqueda.subscribe(function (codigo) {
                if (ko.unwrap(codigo)) {

                    let arrayFiltered = ko.utils.arrayFilter(self.Envios(), function (it) {
                        if (it.CodigoDeEnvio().toUpperCase().indexOf(ko.unwrap(codigo).toUpperCase()) != -1) {
                            return it;
                        }
                    });

                    self.EnviosFiltered(arrayFiltered);
                }
                else
                    self.EnviosFiltered(self.Envios());
            });

            //funciones
            function FinalizarEnvio(id) {

                    $.ajax(
                        {
                            url: "/Envios/FinalizarEnvio",
                            type: "Post",
                            data: { id: id },
                            beforeSend: function () {
                                //self.CargandoSolicitud(true);
                            },
                            success: function (response) {
                                if (response.exito) {
                                    $.notify({
                                        icon: 'fa fa-check-circle',
                                        message: response.message
                                    });
                                }
                                else {
                                    $.notify({
                                        icon: 'fa fa-exclamation-circle',
                                        message: response.message
                                    });
                                }
                                self.EnvioSelected().Finalizado(response.check);//marcarlo como finalizado o no en dependencia de como haya quedado en el server
                            },
                            error: function (e) {
                                $.notify({
                                    icon: 'fa fa-exclamation-circle',
                                    message: 'Ha ocurrido un error procesando su solicitud!'
                                });
                            },
                            complete: function () {
                                setTimeout(function () { window.location.reload(); }, 3000);
                            }
                        }
                    );
            }

            function RechazarEnvio(id, motivo) {

                $.ajax(
                    {
                        url: "/Envios/RechazarEnvio",
                        type: "Post",
                        data: { id: id, motivo: motivo },
                        beforeSend: function () {
                            //self.CargandoSolicitud(true);
                        },
                        success: function (response) {
                            if (response.exito) {
                                $.notify({
                                    icon: 'fa fa-check-circle',
                                    message: response.message
                                });
                            }
                            else {
                                $.notify({
                                    icon: 'fa fa-exclamation-circle',
                                    message: response.message
                                });
                            }
                        },
                        error: function (e) {
                            $.notify({
                                icon: 'fa fa-exclamation-circle',
                                message: 'Ha ocurrido un error procesando su solicitud!'
                            });
                        },
                        complete: function () {
                            //recargar la pagina despues de 3 segundos
                            setTimeout(function () { window.location.reload(); }, 3000);
                        }
                    }
                );
            }
        }
        function RefrescarAutomaticamente() {
            location.reload();
        }
        $(function () {
            let envios = @Html.HtmlConvertToJson(Model);

            ko.applyBindings(new IndexEnvio(envios));

            //refrecar automaticamente cada 2 minutos
            let ref = @refrescar;
            if (ref) {
                setTimeout(function () { RefrescarAutomaticamente() },120000);//refrescar cada 120 mil milisegundos, es decir, cada 120 segundos = 2 minutos
            }
        });
    </script>
}