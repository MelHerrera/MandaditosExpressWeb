@{
    ViewBag.Title = "Clientes";
    @Html.Hidden("Clientes");
}

<div class="row mt-3 mb-3 justify-content-center">
    <div class="col-sm-6">
        <div class="input-group">
            <input type="text" placeholder="Ingrese el correo, nombres, tipo o estado de confirmación." class="input form-control" data-bind="textInput:$root.TextInputBusqueda">
            <span class="input-group-btn">
                <button type="button" class="btn btn btn-success" data-bind="click:$root.LimpiarFiltro">
                    <i class="fa fa-trash"></i> Limpiar
                </button>
            </span>
        </div>
    </div>
    <div class="col-sm-2">
        <i class="fa fa-spinner fa-pulse fa-2x fa-fw" data-bind="visible: $root.FiltrandoClientes"></i>
    </div>
</div>

<!--ko with:TablePagination-->
<!--ko if:ItemsInPage().length > 0-->
<div class="align-items-center pb-lg-4">
    <div class="row justify-content-center">
        <!--ko foreach:ItemsInPage-->
        <div class="card w-25 my-1 mx-2">

            <div class="contact-box center-version">
                <a class="pb-1">

                    <!--ko if:Foto() && Foto().length >0 -->
                    <img alt="image" class="rounded-circle" width="60" height="60" style="width:60px;height:60px" data-bind="attr: { src: 'data:image/png;base64,' + Foto() }">
                    <!--/ko-->
                    <!--ko ifnot:Foto() && Foto().length >0 -->
                    <img src="~/Images/default_profile.png" class="img-circle" height="60" width="60" style="width:60px;height:60px" />
                    <!--/ko-->

                    <h4 class="m-b-xs"><strong data-bind="text:Nombres"></strong></h4>

                    <div class="font-bold" data-bind="text:CorreoElectronico"></div>
                    <address class="m-t-md">
                        <strong data-bind="text:Direccion"></strong>
                        <br>
                        <small>
                            Cel.
                            <span data-bind="text:Telefono"></span>
                        </small>

                    </address>
                    <small data-bind="class:TipoDePersonaClass, text:TipoDePersona"></small>
                    <div class="row">
                        <div class="col-sm-12">
                            <small class="float-right" data-bind="text:EmailConfirmedDescripcion, style: { color:(EmailConfirmed() ? 'inherit' : '#ed5565') }"></small>
                        </div>
                    </div>
                </a>
                <div class="contact-box-footer">
                    <div class="m-t-xs btn-group">
                        <a class="btn btn-warning" data-bind="attr: { href:'@Url.Action("Edit/")'+ Id() }"><i class="fa fa-pencil" title="Editar"></i></a>
                        <a class="btn btn-success" data-bind="attr: { href:'@Url.Action("Details/")'+ Id() }"><i class="fa fa-info-circle" title="Detalles"></i></a>
                    </div>
                </div>
            </div>
        </div>
        <!--/ko-->
    </div>
    <!--ko with:Pagination-->
    <nav aria-label="Páginas">
        <ul class="pagination text-success justify-content-center" data-bind="visible: NeedPaging">

            <li class="page-item" data-bind="css: { disabled: !FirstPageActive() }">
                <a class="page-link" data-bind="click: GoToFirst">Primera</a>
            </li>

            <li class="page-item" data-bind="css: { disabled: !PreviousPageActive() }">
                <a class="page-link" data-bind="click: GoToPrevious">Anterior</a>
            </li>

            <!-- ko foreach: GetPages() -->
            <li class="page-item" data-bind="css: { active: ko.unwrap($parent.CurrentPage()) === ko.unwrap($data) }">
                <a class="page-link" data-bind="click: $parent.GoToPage, text: $data">1</a>
            </li>
            <!-- /ko -->

            <li class="page-item" data-bind="css: { disabled: !NextPageActive() }">
                <a class="page-link" data-bind="click: GoToNext">Siguiente</a>
            </li>

            <li class="page-item" data-bind="css: { disabled: !LastPageActive() }">
                <a class="page-link" data-bind="click: GoToLast">última</a>
            </li>
        </ul>
    </nav>
    <!--/ko-->
</div>
<!--/ko-->

<!--ko ifnot: ItemsInPage().length > 0-->
<div class="justify-content-center" style="text-align:center;">
    <img src="~/Images/5.png" />
    <div class="alert alert-warning alert-Empty m-2" role="alert">
        <i class="fa fa-exclamation-triangle"></i>
        Se encontraron 0 Clientes para mostrar
    </div>
</div>
<!--/ko-->
<!--/ko-->


@section Scripts{
    @Scripts.Render("~/plugins/knockout")
    <script src="~/Scripts/knockout/knockout.mapping.js"></script>
    <script src="~/Scripts/knockout/ViewModel/Shared/PaginacionViewModel.js"></script>
    <script src="~/Scripts/knockout/ViewModel/Shared/TablePagination.js"></script>

    <script type="text/javascript">

        function IndexClientes(data) {
            const self = this;
            data = data || {};

            self.Clientes = ko.observable(ko.utils.arrayMap(data, function (item) { return ko.mapping.fromJS(item); }));
            self.ClientesFiltered = ko.observableArray(self.Clientes() || []);
            self.TablePagination = ko.observable(new TablePagintationViewModel({
                PaginationSize: 9,
                Items: self.ClientesFiltered,//pasar todo el observable para que la paginacion reaccione a cualquier accion aplicada a este arreglo
                maxPageCount: 7
            }));
            self.TextInputBusqueda = ko.observable('');
            self.FiltrandoClientes = ko.observable(false);
            self.LimpiarFiltro = function () {
                self.TextInputBusqueda(null);
            }

            //subscripciones
            self.TextInputBusqueda.subscribe(function () {
                self.FiltrandoClientes(true);//mostrar progress de filtrando

                if (self.TextInputBusqueda()) {
                    let arrayFiltered = ko.utils.arrayFilter(self.Clientes(), function (it) {
                        if (it.CorreoElectronico().toUpperCase().indexOf(self.TextInputBusqueda().toUpperCase()) != -1 ||
                            it.Nombres().toUpperCase().indexOf(self.TextInputBusqueda().toUpperCase()) != -1 ||
                            it.TipoDePersona().toUpperCase().indexOf(self.TextInputBusqueda().toUpperCase()) != -1 ||
                            it.EmailConfirmedDescripcion().toUpperCase().indexOf(self.TextInputBusqueda().toUpperCase()) != -1) {
                            return it;
                        }
                    });
                    self.ClientesFiltered(arrayFiltered);
                }
                else
                    self.ClientesFiltered(self.Clientes());//si no hay nada escrito en el cuadro de busqueda entonces mostrar todo

                self.FiltrandoClientes(false);//ocultar progress
            });

        }

        $(function () {
            let data = $("#Clientes").val();
            $("#Clientes").remove();

            let IndexViewModel = new IndexClientes(JSON.parse(data));

            ko.applyBindings(IndexViewModel);

        });
    </script>
}