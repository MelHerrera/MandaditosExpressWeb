@model MandaditosExpress.Models.Cotizacion

@{
    ViewBag.Title = "Cotización";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cotizacion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FechaDeLaCotizacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayTextFor(model => model.FechaDeLaCotizacion)
                @Html.ValidationMessageFor(model => model.FechaDeLaCotizacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaDeValidez, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayTextFor(model => model.FechaDeValidez)
                @Html.ValidationMessageFor(model => model.FechaDeValidez, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoDeServicioId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoDeServicioId", null, htmlAttributes: new { @class = "form-control TipoDeServicioId" })
                @Html.ValidationMessageFor(model => model.TipoDeServicioId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DireccionDeOrigen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DireccionDeOrigen, new { htmlAttributes = new { @class = "form-control DireccionDeOrigen" } })
                @Html.ValidationMessageFor(model => model.DireccionDeOrigen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DireccionDestino, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DireccionDestino, new { htmlAttributes = new { @class = "form-control DireccionDestino" } })
                @Html.ValidationMessageFor(model => model.DireccionDestino, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DistanciaOrigenDestino, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DistanciaOrigenDestino, new { htmlAttributes = new { @class = "form-control DistanciaOrigenDestino", @type = "number" } })
                @Html.ValidationMessageFor(model => model.DistanciaOrigenDestino, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescripcionDeCotizacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescripcionDeCotizacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescripcionDeCotizacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MontoDeDinero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MontoDeDinero, new { htmlAttributes = new { @class = "form-control MontoDeDinero", @type = "number" } })
                @Html.ValidationMessageFor(model => model.MontoDeDinero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EsEspecial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EsEspecial)
                    @Html.ValidationMessageFor(model => model.EsEspecial, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MontoTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MontoTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MontoTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClienteId, "ClienteId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClienteId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts
{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(function () {
            mostrarCampo($(".TipoDeServicioId").val());
        });

        $(".TipoDeServicioId").on("change", function () {
            mostrarCampo($(".TipoDeServicioId").val());
        });

        function mostrarCampo(id) {
            if (id == 3) {
                $(".MontoDeDinero").prop('disabled', false);
                $(".DireccionDeOrigen").prop('disabled', true);
                $(".DireccionDestino").prop('disabled', true);
                $(".DistanciaOrigenDestino").prop('disabled', true);
            }
            else {
                $(".MontoDeDinero").prop('disabled', true);
                $(".DireccionDeOrigen").prop('disabled', false);
                $(".DireccionDestino").prop('disabled', false);
                $(".DistanciaOrigenDestino").prop('disabled', false);
            }
        }
    </script>


}